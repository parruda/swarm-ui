/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

/* Hide scrollbars on iframes */
iframe {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;     /* Firefox */
}
iframe::-webkit-scrollbar {
  display: none;             /* Chrome, Safari, Opera */
}

/* Dark scrollbar styles */
* {
  scrollbar-width: thin;
  scrollbar-color: #4a5568 #1a202c;
}

*::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

*::-webkit-scrollbar-track {
  background: #1a202c;
}

*::-webkit-scrollbar-thumb {
  background-color: #4a5568;
  border-radius: 6px;
  border: 2px solid #1a202c;
}

*::-webkit-scrollbar-thumb:hover {
  background-color: #718096;
}

/* Smooth expand/collapse animations for log entries */
[data-log-expansion-target="truncated"],
[data-log-expansion-target="full"] {
  transition: all 0.3s ease-in-out;
}

/* Make the chevron rotation smooth */
[data-log-expansion-target="chevron"] {
  transition: transform 0.2s ease-in-out;
}

/* Smooth hover effects on log entries */
[data-log-expansion-target="entry"] {
  transition: border-color 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

[data-log-expansion-target="entry"]:hover {
  background-color: rgba(255, 255, 255, 0.02);
}

/* Monaco Editor - Minimal styles */
#monaco-diff-container {
  height: 100%;
  width: 100%;
}

/* Monaco Comment System Styles */
.comment-line-decoration {
  background: rgba(59, 130, 246, 0.15);
  border-left: 3px solid #3b82f6;
  margin-left: 3px;
}

/* Make line numbers in modified editor (right side) clickable */
.modified-in-monaco-diff-editor .line-numbers {
  cursor: pointer !important;
}

/* Add hover effect to line numbers in modified editor */
.modified-in-monaco-diff-editor .line-numbers:hover {
  background-color: rgba(59, 130, 246, 0.1);
  transition: background-color 0.2s ease;
}

.comment-line-decoration::before {
  content: '';
  position: absolute;
  left: -20px;
  width: 16px;
  height: 16px;
  background-color: #3b82f6;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Comment widget styling */
.comment-widget-container {
  max-width: 400px;
  animation: slideIn 0.2s ease-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Style the comment input */
.comment-widget-container .comment-input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Comment display styling */
.comment-display {
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Ensure delete button is clickable */
.comment-display .delete-comment {
  cursor: pointer;
  transition: color 0.2s ease;
}

.comment-display .delete-comment:hover {
  color: #dc2626;
}

/* Terminal tabs height calculation */
.calc-height-minus-tabs {
  height: calc(100% - 41px); /* Subtract tab bar height */
}

/* Rete.js Visual Builder Styles */
.swarm-node {
  background: #ffffff;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  padding: 12px;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
  transition: all 0.2s ease;
  position: relative;
}

.dark .swarm-node {
  background: #1f2937;
  border-color: #374151;
}

.swarm-node.selected {
  border-color: #f97316;
  box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.1);
}

.swarm-node:hover {
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
}

.node-header {
  margin-bottom: 8px;
}

.node-title {
  font-size: 0.875rem;
  font-weight: 600;
  color: #111827;
}

.dark .node-title {
  color: #f3f4f6;
}

.node-description {
  font-size: 0.75rem;
  color: #6b7280;
  margin-bottom: 8px;
}

.dark .node-description {
  color: #9ca3af;
}

.node-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
}

.node-tag {
  font-size: 0.75rem;
  padding: 2px 8px;
  border-radius: 4px;
}

.node-tag.model-tag {
  background-color: #dbeafe;
  color: #1e40af;
}

.dark .node-tag.model-tag {
  background-color: #1e3a8a;
  color: #93bbfc;
}

.node-tag.provider-tag {
  background-color: #fce7f3;
  color: #be185d;
}

.dark .node-tag.provider-tag {
  background-color: #831843;
  color: #f9a8d4;
}

/* Socket Styles */
.socket {
  width: 16px;
  height: 16px;
  border-radius: 50%;
  position: absolute;
  cursor: crosshair;
  transition: all 0.2s ease;
}

.socket.input {
  left: -8px;
  top: 50%;
  transform: translateY(-50%);
  background-color: #9ca3af;
  border: 2px solid #ffffff;
}

.socket.output {
  right: -8px;
  top: 50%;
  transform: translateY(-50%);
  background-color: #f97316;
  border: 2px solid #ffffff;
}

.dark .socket {
  border-color: #1f2937;
}

.socket:hover {
  transform: translateY(-50%) scale(1.2);
}

/* Connection Styles */
.connection {
  cursor: pointer;
  transition: stroke 0.2s ease;
}

.connection:hover {
  stroke: #ea580c;
  stroke-width: 3px;
}

/* Rete.js Container */
.rete {
  position: relative;
  font-family: Arial, sans-serif;
  background-size: 50px 50px;
  background-image: 
    linear-gradient(90deg, transparent 49%, rgba(0, 0, 0, 0.05) 49%, rgba(0, 0, 0, 0.05) 51%, transparent 51%),
    linear-gradient(rgba(0, 0, 0, 0.05) 49%, transparent 49%, transparent 51%, rgba(0, 0, 0, 0.05) 51%);
}

.dark .rete {
  background-image: 
    linear-gradient(90deg, transparent 49%, rgba(255, 255, 255, 0.05) 49%, rgba(255, 255, 255, 0.05) 51%, transparent 51%),
    linear-gradient(rgba(255, 255, 255, 0.05) 49%, transparent 49%, transparent 51%, rgba(255, 255, 255, 0.05) 51%);
}

/* Override default Rete styles */
.rete-background {
  position: absolute !important;
}

.input-sockets,
.output-sockets {
  pointer-events: none;
}

.input-sockets .socket,
.output-sockets .socket {
  pointer-events: all;
}

