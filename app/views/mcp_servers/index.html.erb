<% content_for :title, "MCP Servers" %>

<div class="py-8">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="sm:flex sm:items-center">
      <div class="sm:flex-auto">
        <h1 class="text-base font-semibold leading-6 text-gray-900 dark:text-gray-100 flex items-center">
          <%= heroicon "server-stack", variant: :outline, options: { class: "h-5 w-5 mr-2" } %>
          MCP Servers
        </h1>
        <p class="mt-2 text-sm text-gray-700 dark:text-gray-300">Configure Model Context Protocol servers for your AI instances.</p>
      </div>
      <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none flex gap-2">
        <%= link_to export_all_mcp_servers_path(format: :json), class: "inline-flex items-center justify-center gap-x-1.5 rounded-md bg-gray-600 dark:bg-gray-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-gray-500 dark:hover:bg-gray-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600 dark:focus-visible:outline-gray-600 transition-colors duration-200" do %>
          <%= heroicon "arrow-up-tray", variant: :mini, options: { class: "h-5 w-5" } %>
          Export All
        <% end %>
        
        <%= form_with url: import_mcp_servers_path, multipart: true, class: "inline-flex", data: { turbo: false } do |f| %>
          <%= f.file_field :file, accept: '.json', class: 'hidden', data: { action: 'change->form#submit' } %>
          <%= f.label :file, class: "inline-flex items-center justify-center gap-x-1.5 rounded-md bg-green-600 dark:bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 dark:hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600 dark:focus-visible:outline-green-600 transition-colors duration-200 cursor-pointer" do %>
            <%= heroicon "arrow-down-tray", variant: :mini, options: { class: "h-5 w-5" } %>
            Import
          <% end %>
        <% end %>
        
        <%= link_to new_mcp_server_path, data: { turbo_frame: "_top" }, class: "inline-flex items-center justify-center gap-x-1.5 rounded-md bg-orange-900 dark:bg-orange-900 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-orange-800 dark:hover:bg-orange-800 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-orange-900 dark:focus-visible:outline-orange-900 transition-colors duration-200" do %>
          <%= heroicon "plus", variant: :mini, options: { class: "h-5 w-5" } %>
          New MCP Server
        <% end %>
      </div>
    </div>
    
    <!-- Search and Filters -->
    <div class="mt-6">
      <%= form_with url: mcp_servers_path, method: :get, 
                    data: { 
                      controller: "live-search",
                      turbo_frame: "mcp_servers_list",
                      turbo_action: "advance"
                    },
                    class: "flex gap-2" do |f| %>
        <div class="relative flex-1 max-w-lg">
          <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
            <%= heroicon "magnifying-glass", variant: :mini, options: { class: "h-5 w-5 text-gray-400" } %>
          </div>
          <%= text_field_tag :search, params[:search], 
              placeholder: "Search servers by name, description, or tags...",
              data: { 
                live_search_target: "input",
                action: "input->live-search#search keydown->live-search#submitNow"
              },
              class: "block w-full rounded-md border border-gray-300 dark:border-gray-600 py-2 pl-10 pr-3 text-gray-900 dark:text-gray-100 bg-white dark:bg-gray-700 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:outline-none focus:border-orange-500 dark:focus:border-orange-400 focus:ring-1 focus:ring-orange-500 dark:focus:ring-orange-400 sm:text-sm sm:leading-6 transition-colors duration-200" %>
          <%= hidden_field_tag :tag, params[:tag] if params[:tag].present? %>
          <%= hidden_field_tag :server_type, params[:server_type] if params[:server_type].present? %>
        </div>
        <button type="button"
                data-live-search-target="clearButton"
                data-action="click->live-search#clearSearch"
                style="display: <%= params[:search].present? ? '' : 'none' %>"
                class="inline-flex items-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200">
          <%= heroicon "x-mark", variant: :mini, options: { class: "h-4 w-4 mr-1" } %>
          Clear
        </button>
      <% end %>
    </div>

    <!-- Divider -->
    <div class="mt-6 border-t border-gray-200 dark:border-gray-700"></div>

    <%= turbo_frame_tag "mcp_servers_list" do %>
    <!-- Type Filters -->
    <div class="mt-6">
      <div class="flex items-center gap-2 mb-3">
        <%= heroicon "adjustments-horizontal", variant: :mini, options: { class: "h-5 w-5 text-gray-500 dark:text-gray-400" } %>
        <h3 class="text-sm font-medium text-gray-700 dark:text-gray-300">Filter by type:</h3>
      </div>
      <div class="flex flex-wrap gap-2">
        <%= link_to mcp_servers_path(search: params[:search], tag: params[:tag]), 
                    data: { turbo_frame: "mcp_servers_list", turbo_action: "advance" },
                    class: "#{params[:server_type].blank? ? 'bg-orange-600 dark:bg-orange-600 text-white ring-orange-600 dark:ring-orange-600' : 'bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600'} inline-flex items-center rounded-full px-3 py-1.5 text-sm font-medium ring-1 ring-inset transition-colors duration-200" do %>
          All
          <span class="ml-1.5 rounded-full bg-white/20 dark:bg-black/20 px-2 py-0.5 text-xs font-medium"><%= McpServer.count %></span>
        <% end %>
        <% McpServer::SERVER_TYPES.each do |type| %>
          <% type_count = McpServer.by_type(type).count %>
          <%= link_to mcp_servers_path(server_type: type, search: params[:search], tag: params[:tag]), 
                      data: { turbo_frame: "mcp_servers_list", turbo_action: "advance" },
                      class: "#{params[:server_type] == type ? 'bg-orange-600 dark:bg-orange-600 text-white ring-orange-600 dark:ring-orange-600' : 'bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600'} inline-flex items-center rounded-full px-3 py-1.5 text-sm font-medium ring-1 ring-inset transition-colors duration-200" do %>
            <%= type.upcase %>
            <span class="ml-1.5 rounded-full bg-white/20 dark:bg-black/20 px-2 py-0.5 text-xs font-medium"><%= type_count %></span>
          <% end %>
        <% end %>
      </div>
    </div>

    <!-- Tag Filters -->
    <% if @all_tags.present? && @all_tags.any? %>
    <div class="mt-4">
      <div class="flex items-center gap-2 mb-3">
        <%= heroicon "tag", variant: :mini, options: { class: "h-5 w-5 text-gray-500 dark:text-gray-400" } %>
        <h3 class="text-sm font-medium text-gray-700 dark:text-gray-300">Filter by tags:</h3>
      </div>
      <div class="flex flex-wrap gap-2">
        <% @all_tags.each do |tag| %>
          <% tag_count = McpServer.with_tag(tag).count %>
          <%= link_to mcp_servers_path(tag: tag, search: params[:search], server_type: params[:server_type]), 
                      data: { turbo_frame: "mcp_servers_list", turbo_action: "advance" },
                      class: "#{params[:tag] == tag ? 'bg-orange-600 dark:bg-orange-600 text-white ring-orange-600 dark:ring-orange-600' : 'bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600'} inline-flex items-center rounded-full px-3 py-1.5 text-sm font-medium ring-1 ring-inset transition-colors duration-200" do %>
            <%= tag %>
            <span class="ml-1.5 rounded-full bg-white/20 dark:bg-black/20 px-2 py-0.5 text-xs font-medium"><%= tag_count %></span>
          <% end %>
        <% end %>
      </div>
    </div>
    <% end %>

    <% if params[:search].present? %>
      <div class="mt-6 flex items-center gap-2">
        <span class="text-sm text-gray-600 dark:text-gray-400">
          Found <%= pluralize(@mcp_servers.count, 'server') %> matching "<%= params[:search] %>"
        </span>
      </div>
    <% end %>

    <% if @mcp_servers.any? %>
      <div class="mt-8 space-y-4">
        <% @mcp_servers.each do |server| %>
          <div class="bg-white dark:bg-gray-800 shadow dark:shadow-gray-700/50 rounded-lg p-6 border border-gray-200 dark:border-gray-700 transition-colors duration-200">
            <div class="flex items-center justify-between">
              <div class="flex items-start space-x-8 flex-1">
                <div class="min-w-0">
                  <div class="flex items-center space-x-3">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
                      <%= link_to server.name, mcp_server_path(server), data: { turbo_frame: "_top" }, class: "hover:text-orange-900 dark:hover:text-orange-400" %>
                    </h3>
                    <% if server.stdio? %>
                      <span class="inline-flex items-center rounded-md bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-400 ring-blue-600/20 dark:ring-blue-400/30 px-2 py-1 text-xs font-medium ring-1 ring-inset flex-shrink-0">
                        <%= heroicon "command-line", variant: :mini, options: { class: "h-3 w-3 mr-1" } %>
                        STDIO
                      </span>
                    <% elsif server.sse? %>
                      <span class="inline-flex items-center rounded-md bg-green-50 dark:bg-green-900/30 text-green-700 dark:text-green-400 ring-green-600/20 dark:ring-green-400/30 px-2 py-1 text-xs font-medium ring-1 ring-inset flex-shrink-0">
                        <%= heroicon "signal", variant: :mini, options: { class: "h-3 w-3 mr-1" } %>
                        SSE
                      </span>
                    <% end %>
                  </div>
                  <% if server.description.present? %>
                    <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">
                      <%= server.description %>
                    </p>
                  <% end %>
                  <div class="text-xs text-gray-500 dark:text-gray-400 mt-2 font-mono">
                    <% if server.stdio? %>
                      Command: <%= server.command %>
                    <% elsif server.sse? %>
                      URL: <%= server.url %>
                    <% end %>
                  </div>
                  <% if server.tags.present? && server.tags.any? %>
                    <div class="flex items-center gap-1 mt-2">
                      <% server.tags.each do |tag| %>
                        <span class="inline-flex items-center rounded bg-gray-100 dark:bg-gray-700 px-2 py-0.5 text-xs font-medium text-gray-600 dark:text-gray-300">
                          <%= tag %>
                        </span>
                      <% end %>
                    </div>
                  <% end %>
                </div>
                
                <div class="flex items-center space-x-6 text-sm text-gray-600 dark:text-gray-400">
                  <div>
                    <span class="font-medium">Usage:</span> 
                    <span class="text-green-600 dark:text-green-400"><%= pluralize(server.usage_count, 'time') %></span>
                  </div>
                </div>
              </div>

              <div class="flex items-center space-x-2 ml-4 flex-shrink-0">
                <%= link_to mcp_server_path(server), data: { turbo_frame: "_top" }, class: "inline-flex items-center justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200" do %>
                  <%= heroicon "eye", variant: :mini, options: { class: "h-4 w-4 mr-1.5" } %>
                  View
                <% end %>
                <%= link_to export_mcp_server_path(server, format: :json), class: "inline-flex items-center justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-600 dark:text-gray-300 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200", title: "Export server" do %>
                  <%= heroicon "arrow-up-tray", variant: :mini, options: { class: "h-4 w-4" } %>
                <% end %>
                <%= link_to edit_mcp_server_path(server), data: { turbo_frame: "_top" }, class: "inline-flex items-center justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-gray-600 dark:text-gray-300 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200" do %>
                  <%= heroicon "pencil", variant: :mini, options: { class: "h-4 w-4 mr-1.5" } %>
                  Edit
                <% end %>
                <%= link_to mcp_server_path(server),
                    data: { 
                      "turbo-method": :delete,
                      "turbo-confirm": "Are you sure you want to delete this MCP server?" 
                    },
                    class: "inline-flex items-center justify-center rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-sm font-semibold text-red-600 dark:text-red-400 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors duration-200" do %>
                  <%= heroicon "trash", variant: :mini, options: { class: "h-4 w-4" } %>
                <% end %>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="mt-8 text-center">
        <div class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500">
          <%= heroicon 'server-stack', variant: :outline, options: { class: "h-12 w-12" } %>
        </div>
        <h3 class="mt-2 text-sm font-semibold text-gray-900 dark:text-gray-100">
          No MCP servers
        </h3>
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
          Get started by creating a new MCP server configuration.
        </p>
        <div class="mt-6">
          <%= link_to new_mcp_server_path, data: { turbo_frame: "_top" }, class: "inline-flex items-center rounded-md bg-orange-900 dark:bg-orange-900 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-orange-800 dark:hover:bg-orange-800 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-orange-900 dark:focus-visible:outline-orange-900 transition-colors duration-200" do %>
            <%= heroicon "plus", variant: :mini, options: { class: "h-4 w-4 mr-1" } %>
            Create MCP Server
          <% end %>
        </div>
      </div>
    <% end %>
    <% end %><%# End turbo_frame_tag %>
  </div>
</div>