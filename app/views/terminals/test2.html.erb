<div class="p-8">
  <h1 class="text-2xl mb-4">WebSocket Test 2 - Direct</h1>
  
  <div id="status" class="mb-4 p-4 bg-gray-100 rounded">
    Status: <span id="status-text">Loading...</span>
  </div>
  
  <div id="messages" class="p-4 bg-gray-900 text-green-400 rounded h-64 overflow-auto font-mono text-sm">
    Initializing...
  </div>
  
  <script type="module">
    import { createConsumer } from "@rails/actioncable"
    
    const statusEl = document.getElementById('status-text');
    const messagesEl = document.getElementById('messages');
    
    function log(message) {
      const time = new Date().toLocaleTimeString();
      messagesEl.innerHTML += `\n[${time}] ${message}`;
      messagesEl.scrollTop = messagesEl.scrollHeight;
    }
    
    try {
      log('Creating consumer directly...');
      const consumer = createConsumer();
      
      log('Consumer created: ' + (consumer ? 'Yes' : 'No'));
      
      // Make it global for debugging
      window.testConsumer = consumer;
      
      if (consumer) {
        log('Consumer URL: ' + consumer.url);
        log('Creating subscription...');
        
        const subscription = consumer.subscriptions.create(
          { channel: "TestChannel" },
          {
            connected() {
              log('✓ Connected to TestChannel!');
              statusEl.textContent = 'Connected';
              statusEl.className = 'text-green-600 font-bold';
              
              // Send a test message
              this.perform('receive', { test: 'Hello from client!' });
            },
            
            disconnected() {
              log('✗ Disconnected from TestChannel');
              statusEl.textContent = 'Disconnected';
              statusEl.className = 'text-red-600 font-bold';
            },
            
            received(data) {
              log('→ Received: ' + JSON.stringify(data));
            },
            
            rejected() {
              log('✗ Subscription rejected by server');
              statusEl.textContent = 'Rejected';
              statusEl.className = 'text-red-600 font-bold';
            }
          }
        );
        
        log('Subscription object created');
        
        // Try to connect manually
        consumer.connect();
        log('Called consumer.connect()');
        
      } else {
        log('ERROR: Consumer is null');
      }
    } catch (error) {
      log('ERROR: ' + error.message);
      log('Stack: ' + error.stack);
      statusEl.textContent = 'Error';
      statusEl.className = 'text-red-600 font-bold';
    }
  </script>
</div>